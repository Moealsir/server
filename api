#!/bin/bash

# Define variables
DOMAIN="moealsir.tech"
NGINX_SITES_AVAILABLE="/etc/nginx/sites-available"
NGINX_SITES_ENABLED="/etc/nginx/sites-enabled"
NGINX_RELOAD="sudo systemctl reload nginx"

# Cloudflare variables
CLOUDFLARE_API_TOKEN="y4YPReT2-KiliGfiRhG_sgXwR0BXFh-Zqp9VoPDk"
CLOUDFLARE_ZONE_ID="db2a6826a77fbf23e7c7519ac458cc06"
SERVER_IP="54.226.6.57"

# Function to create a new subdomain
create_subdomain() {
    echo "Creating a subdomain..."
    read -p "Enter the subdomain name: " subdomain

    if [ -z "$subdomain" ]; then
        echo "Subdomain name cannot be empty."
        exit 1
    fi

    # Create subdomain folder by copying the main domain folder
    sudo cp -r "/var/www/$DOMAIN" "/var/www/$subdomain.$DOMAIN"

    # Create Nginx configuration file for the subdomain
    sudo tee "$NGINX_SITES_AVAILABLE/$subdomain.$DOMAIN" > /dev/null <<EOF
server {
    listen 80;
    root /var/www/$subdomain.$DOMAIN;
    index index.html index.htm index.nginx-debian.html;
    server_name $subdomain.$DOMAIN www.$subdomain.$DOMAIN;

    location / {
        try_files \$uri \$uri/ =404;
    }
}
EOF

    # Create symbolic link to enable the site
    sudo ln -s "$NGINX_SITES_AVAILABLE/$subdomain.$DOMAIN" "$NGINX_SITES_ENABLED/$subdomain.$DOMAIN"

    # Adjust permissions
    sudo chown -R $USER:$USER "/var/www/$DOMAIN/html"
    sudo chown -R $USER:$USER "/var/www/$subdomain.$DOMAIN/html"
    sudo chmod -R 755 "/var/www/$DOMAIN"
    sudo chmod -R 755 "/var/www/$subdomain.$DOMAIN"

    # Reload Nginx
    $NGINX_RELOAD

    # Create DNS record in Cloudflare
    create_dns_record "$subdomain" "CNAME" "$SERVER_IP"
    
    echo "Subdomain $subdomain.$DOMAIN created successfully."
}

# Function to delete a subdomain
delete_subdomain() {
    echo "Deleting a subdomain..."
    read -p "Enter the subdomain name: " subdomain

    if [ -z "$subdomain" ]; then
        echo "Subdomain name cannot be empty."
        exit 1
    fi

    SUBDOMAIN_CONF="$NGINX_SITES_AVAILABLE/$subdomain.$DOMAIN"
    SUBDOMAIN_DIR="/var/www/$subdomain.$DOMAIN"

    # Remove Nginx configuration file
    sudo rm -f "$SUBDOMAIN_CONF"

    # Remove symbolic link from sites-enabled
    sudo rm -f "$NGINX_SITES_ENABLED/$subdomain.$DOMAIN"

    # Reload Nginx
    $NGINX_RELOAD

    # Remove document root directory
    sudo rm -rf "$SUBDOMAIN_DIR"

    # Delete DNS record from Cloudflare
    delete_dns_record "$subdomain"

    echo "Subdomain $subdomain.$DOMAIN deleted successfully."
}

# Function to create DNS record in Cloudflare
create_dns_record() {
    local subdomain="$1"
    local record_type="$2"
    local record_value="$3"

    curl -X POST "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/dns_records" \
         -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
         -H "Content-Type: application/json" \
         --data "{\"type\":\"$record_type\",\"name\":\"$subdomain.$DOMAIN\",\"content\":\"$record_value\",\"ttl\":1,\"proxied\":false}"
}

# Function to delete DNS record in Cloudflare
delete_dns_record() {
    local subdomain="$1"

    # Get DNS record ID
    local dns_record_id=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/dns_records?type=A&name=$subdomain.$DOMAIN" \
                           -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
                           -H "Content-Type: application/json" | jq -r '.result[0].id')

    # Delete DNS record
    curl -X DELETE "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/dns_records/$dns_record_id" \
         -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
         -H "Content-Type: application/json"
}

# Main menu function
main_menu() {
    echo "Main Menu:"
    echo "1. Create a subdomain"
    echo "2. Delete a subdomain"
    echo "3. Exit"

    read -p "Please enter your choice: " choice

    case $choice in
        1) create_subdomain ;;
        2) delete_subdomain ;;
        3) sudo systemctl restart nginx
           exit ;;
        *) echo "Invalid choice. Please enter a number between 1 and 3."
           main_menu ;;
    esac
}

# Main execution
while true; do
    main_menu
done
