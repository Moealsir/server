#!/bin/bash

## creating zabat

# Define variables
DOMAIN="moealsir.tech"
NGINX_SITES_AVAILABLE="/etc/nginx/sites-available"
NGINX_SITES_ENABLED="/etc/nginx/sites-enabled"
NGINX_RELOAD="sudo systemctl reload nginx"

# Cloudflare variables
CLOUDFLARE_API_TOKEN="zXE7ZmSBSZMSw7-a33RCdyAzemIIK1xKZ7A2RDin"
CLOUDFLARE_ZONE_ID="db2a6826a77fbf23e7c7519ac458cc06"


# Function to create a new subdomain
create_subdomain() {
    echo "Creating a subdomain..."
    read -p "Enter the subdomain name: " subdomain

    if [ -z "$subdomain" ]; then
        echo "Subdomain name cannot be empty."
        exit 1
    fi

    /bin/csd $subdomain

    # Reload Nginx
    $NGINX_RELOAD

    # Create DNS record in Cloudflare (CNAME record)
    create_dns_record "$subdomain" "CNAME" "$DOMAIN"
    
    echo "Subdomain $subdomain.$DOMAIN created successfully."
}


# Function to delete a subdomain
delete_subdomain() {
    echo "Deleting a subdomain..."
    read -p "Enter the subdomain name: " subdomain

    if [ -z "$subdomain" ]; then
        echo "Subdomain name cannot be empty."
        exit 1
    fi

    /bin/dsd $subdomain

    # Reload Nginx
    $NGINX_RELOAD

    # Delete DNS record from Cloudflare
    delete_dns_record "$subdomain"

    echo "Subdomain $subdomain.$DOMAIN deleted successfully."
}

# Function to create DNS record in Cloudflare
create_dns_record() {
    local subdomain="$1"
    local record_type="$2"
    local record_value="$3"
    local proxied="true"  # Set this to "true" if the record needs to be proxied, otherwise set it to "false"

    curl -X POST "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/dns_records" \
         -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
         -H "Content-Type: application/json" \
         --data "{\"type\":\"$record_type\",\"name\":\"$subdomain.$DOMAIN\",\"content\":\"$record_value\",\"ttl\":1,\"proxied\":$proxied}"
}

# Function to delete DNS record in Cloudflare
delete_dns_record() {
    local subdomain="$1"

    # Get DNS record ID
    local dns_record_response=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/dns_records?type=CNAME&name=$subdomain.$DOMAIN" \
                           -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
                           -H "Content-Type: application/json")

    echo "Response from API call:"
    echo "$dns_record_response"

    local dns_record_id=$(echo "$dns_record_response" | jq -r '.result[0].id')

    if [ "$dns_record_id" = "null" ]; then
        echo "DNS record not found for subdomain $subdomain.$DOMAIN. Exiting."
        exit 1
    fi

    # Delete DNS record
    curl -X DELETE "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/dns_records/$dns_record_id" \
     -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
     -H "Content-Type: application/json"
}

# Function to list all DNS records in Cloudflare for the specified zone
list_dns_records() {
    curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/dns_records" \
         -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
         -H "Content-Type: application/json"
}

# # Call the function to list DNS records
# list_dns_records


# Main menu function
main_menu() {
    echo "Main Menu:"
    echo "1. Create a subdomain"
    echo "2. Delete a subdomain"
    echo "3. Exit"

    read -p "Please enter your choice: " choice

    case $choice in
        1) create_subdomain ;;
        2|d) delete_subdomain ;;
        3|q) sudo systemctl restart nginx
           exit ;;
        *) echo "Invalid choice. Please enter a number between 1 and 3."
           main_menu ;;
    esac
}

# Main execution
while true; do
    main_menu
done
